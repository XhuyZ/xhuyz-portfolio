---
import { siteConfig } from "../../config";
import "../../styles/global.css";

export async function getStaticPaths() {
  return siteConfig.blogs.map((blog) => ({
    params: { slug: blog.id },
    props: { blog },
  }));
}

const { blog } = Astro.props;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={blog.description} />
    <meta property="og:title" content={blog.title} />
    <meta property="og:description" content={blog.description} />
    <meta property="og:image" content={blog.image} />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=IBM+Plex+Mono:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100;1,200;1,300;1,400;1,500;1,600;1,700&display=swap"
      rel="stylesheet"
    />
    <title>{blog.title} - {siteConfig.name}</title>
  </head>
  <body class="bg-white">
    <!-- Header -->
    <header class="bg-white/95 backdrop-blur-sm border-b border-gray-200 sticky top-0 z-50">
      <nav class="max-w-7xl mx-auto px-6 lg:px-8 py-4">
        <div class="flex items-center justify-between">
          <a href="/" class="flex items-center space-x-2 group">
            <span class="text-xl font-bold text-gray-900 group-hover:text-gray-700 transition-colors">
              {siteConfig.name}
            </span>
            <div class="w-2 h-2 rounded-full" style={`background-color: ${siteConfig.accentColor}`}></div>
          </a>
          <div class="flex items-center space-x-6">
            <a href="/" class="text-gray-600 hover:text-gray-900 transition-colors font-medium">Home</a>
            <a href="/blog" class="text-gray-600 hover:text-gray-900 transition-colors font-medium">Blog</a>
            <a href="/#about" class="text-gray-600 hover:text-gray-900 transition-colors font-medium">About</a>
          </div>
        </div>
      </nav>
    </header>

    <main>
      <!-- Hero Section -->
      <section class="pt-16 pb-12 bg-gradient-to-b from-gray-50 to-white">
        <div class="max-w-4xl mx-auto px-6 lg:px-8">
          <div class="text-center mb-8">
            <div class="flex items-center justify-center gap-3 mb-6">
              <time 
                class="text-sm text-gray-500 font-medium"
                datetime={blog.publishedAt}
              >
                {new Date(blog.publishedAt).toLocaleDateString('en-US', {
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric'
                })}
              </time>
              <span class="w-1 h-1 rounded-full bg-gray-300"></span>
              <span class="text-sm text-gray-500 font-medium">{blog.readTime}</span>
            </div>
            
            <h1 class="text-4xl sm:text-5xl lg:text-6xl font-bold text-gray-900 mb-8 leading-tight">
              {blog.title}
            </h1>
            
            <p class="text-xl text-gray-600 leading-relaxed max-w-3xl mx-auto mb-8">
              {blog.description}
            </p>
            
            <div class="flex flex-wrap gap-3 justify-center mb-8">
              {blog.tags.map((tag) => (
                <span class="px-4 py-2 bg-gray-900 text-white rounded-full text-sm font-medium">
                  {tag}
                </span>
              ))}
            </div>
          </div>
          
          <div class="aspect-[16/9] rounded-2xl overflow-hidden shadow-2xl">
            <img
              src={blog.image}
              alt={blog.title}
              class="w-full h-full object-cover"
            />
          </div>
        </div>
      </section>

      <!-- Article Content -->
      <section class="py-16">
        <div class="max-w-7xl mx-auto px-6 lg:px-8">
          <div class="grid grid-cols-1 lg:grid-cols-12 gap-12">
            
            <!-- Table of Contents -->
            <aside class="lg:col-span-3 lg:sticky lg:top-24 lg:self-start">
              <div class="bg-gray-50 rounded-2xl p-6 border border-gray-200">
                <h3 class="text-lg font-bold text-gray-900 mb-4 flex items-center">
                  <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 10h16M4 14h16M4 18h16" />
                  </svg>
                  Table of Contents
                </h3>
                <nav class="space-y-2">
                  {blog.content.sections.map((section, index) => (
                    <a
                      href={`#${section.id}`}
                      class="block px-3 py-2 text-sm text-gray-600 hover:text-gray-900 hover:bg-white rounded-lg transition-all duration-200 border-l-2 border-transparent hover:border-gray-300"
                      data-section={section.id}
                    >
                      {`${index + 1}. ${section.title}`}
                    </a>
                  ))}
                </nav>
              </div>
              
              <!-- Author Info -->
              <div class="mt-8 bg-white rounded-2xl p-6 border border-gray-200 shadow-sm">
                <div class="flex items-center mb-4">
                  <img
                    src="/assets/xhuyz.png"
                    alt={siteConfig.name}
                    class="w-12 h-12 rounded-full object-cover mr-4"
                  />
                  <div>
                    <h4 class="font-semibold text-gray-900">{siteConfig.name}</h4>
                    <p class="text-sm text-gray-600">{siteConfig.title}</p>
                  </div>
                </div>
                <p class="text-sm text-gray-600 leading-relaxed">
                  Passionate about software engineering, Linux systems, and sharing knowledge through code and writing.
                </p>
              </div>
            </aside>
            
            <!-- Main Content -->
            <article class="lg:col-span-9">
              <div class="prose prose-lg max-w-none">
                {blog.content.sections.map((section) => (
                  <section id={section.id} class="mb-16 scroll-mt-24">
                    <h2 class="text-3xl font-bold text-gray-900 mb-6 pb-3 border-b border-gray-200">
                      {section.title}
                    </h2>
                    
                    <div class="text-gray-700 leading-relaxed mb-8 text-lg">
                      {section.content}
                    </div>
                    
                    <!-- Comments Section -->
                    {section.comments && section.comments.length > 0 && (
                      <div class="bg-gray-50 rounded-xl p-6 border border-gray-200">
                        <h4 class="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
                          </svg>
                          Reader Thoughts
                        </h4>
                        <div class="space-y-4">
                          {section.comments.map((comment) => (
                            <div class="flex items-start space-x-3 bg-white rounded-lg p-4 shadow-sm hover:shadow-md transition-shadow">
                              <span class="text-2xl flex-shrink-0">{comment.icon}</span>
                              <p class="text-gray-700 italic flex-1">{comment.text}</p>
                            </div>
                          ))}
                        </div>
                      </div>
                    )}
                  </section>
                ))}
              </div>
              
              <!-- Article Footer -->
              <footer class="mt-16 pt-8 border-t border-gray-200">
                <div class="flex items-center justify-between">
                  <div class="flex items-center space-x-4">
                    <span class="text-sm text-gray-600">Share this article:</span>
                    <div class="flex space-x-3">
                      <a href={`https://twitter.com/intent/tweet?url=${Astro.url}&text=${encodeURIComponent(blog.title)}`}
                         target="_blank" rel="noopener"
                         class="p-2 bg-gray-100 rounded-full hover:bg-gray-200 transition-colors">
                        <svg class="w-4 h-4 text-gray-600" fill="currentColor" viewBox="0 0 24 24">
                          <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
                        </svg>
                      </a>
                      <a href={`https://www.linkedin.com/sharing/share-offsite/?url=${Astro.url}`}
                         target="_blank" rel="noopener"
                         class="p-2 bg-gray-100 rounded-full hover:bg-gray-200 transition-colors">
                        <svg class="w-4 h-4 text-gray-600" fill="currentColor" viewBox="0 0 24 24">
                          <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
                        </svg>
                      </a>
                    </div>
                  </div>
                  <a href="/blog" 
                     class="inline-flex items-center text-sm font-medium hover:underline"
                     style={`color: ${siteConfig.accentColor}`}>
                    <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16l-4-4m0 0l4-4m-4 4h18" />
                    </svg>
                    Back to Blog
                  </a>
                </div>
              </footer>
            </article>
          </div>
        </div>
      </section>
    </main>

    <!-- Footer -->
    <footer class="bg-gray-50 border-t border-gray-200 mt-24">
      <div class="max-w-7xl mx-auto px-6 lg:px-8 py-12">
        <div class="text-center">
          <p class="text-gray-600">
            © {new Date().getFullYear()} {siteConfig.name}. All rights reserved.
          </p>
        </div>
      </div>
    </footer>

    <script>
      // Smooth scrolling for table of contents
      document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
          e.preventDefault();
          const target = document.querySelector(this.getAttribute('href'));
          if (target) {
            target.scrollIntoView({
              behavior: 'smooth',
              block: 'start'
            });
          }
        });
      });

      // Highlight active section in TOC
      const observerOptions = {
        rootMargin: '-20% 0px -60% 0px',
        threshold: 0.1
      };

      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          const id = entry.target.getAttribute('id');
          const tocLink = document.querySelector(`a[data-section="${id}"]`);
          
          if (entry.isIntersecting) {
            // Remove active class from all TOC links
            document.querySelectorAll('a[data-section]').forEach(link => {
              link.classList.remove('bg-white', 'border-blue-500', 'text-gray-900');
              link.classList.add('border-transparent', 'text-gray-600');
            });
            
            // Add active class to current TOC link
            if (tocLink) {
              tocLink.classList.add('bg-white', 'border-blue-500', 'text-gray-900');
              tocLink.classList.remove('border-transparent', 'text-gray-600');
            }
          }
        });
      }, observerOptions);

      // Observe all sections
      document.querySelectorAll('section[id]').forEach(section => {
        observer.observe(section);
      });
    </script>
  </body>
</html>
